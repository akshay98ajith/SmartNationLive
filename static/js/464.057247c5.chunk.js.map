{"version":3,"file":"static/js/464.057247c5.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","Pages/HomePage/GetInTouch/GetInTouch.jsx"],"sourcesContent":["import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * This component accepts all of [`Collapse`'s props](/utilities/transitions/#collapse-props).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react'\r\nimport { Accordion, Col, Container, Row } from 'react-bootstrap'\r\nimport Button from '../../../Components/Button/Button'\r\nimport \"./GetInTouch.scss\"\r\nimport { motion } from 'framer-motion'\r\n\r\nconst GetInTouch = () => {\r\n    return (\r\n        <section className=\"contactSection\">\r\n            <Container>\r\n                <Row className='d-flex justify-content-between'>\r\n                    <Col sm={12} md={3} className=\"d-flex flex-column justify-content-between text-center text-md-start\">\r\n                        <motion.div initial={{ opacity: 0, skewY: 5, translateY: 50 }} whileInView={{ opacity: 1, skewY: 0, translateY: 0 }} viewport={{ once: true }}>\r\n                            <h3>Let's Build Something Together</h3>\r\n                        </motion.div>\r\n                        <motion.div initial={{ opacity: 0, skewY: 5, translateY: 50 }} whileInView={{ opacity: 1, skewY: 0, translateY: 0 }} viewport={{ once: true }}>\r\n                            <p>Smart nation is the construction companies' solution for making job sites safer and compliant with regulatory requirements in the safest way possible. With a ‘mobile-first’ approach in mind.</p>\r\n                        </motion.div>\r\n                        <Button label=\"Get in touch\" />\r\n                    </Col>\r\n                    <Col sm={12} md={8}>\r\n                        <motion.div initial={{ opacity: 0, skewY: 5, translateY: 50 }} whileInView={{ opacity: 1, skewY: 0, translateY: 0 }} viewport={{ once: true }}>\r\n                            <Accordion defaultActiveKey=\"0\" flush className='text-justify'>\r\n                                <Accordion.Item eventKey=\"0\">\r\n                                    <Accordion.Header>What is the difference between an active and inactive user?\r\n                                    </Accordion.Header>\r\n                                    <Accordion.Body>\r\n                                        We price based on two types of users: active and inactive.\r\n                                        An active user is someone who will login to the software and utilize it to host a tailgate meeting, lead a training, complete an inspection, et\r\n                                    </Accordion.Body>\r\n                                </Accordion.Item>\r\n                                <Accordion.Item eventKey=\"1\">\r\n                                    <Accordion.Header>What type of payment do we accept?\r\n                                    </Accordion.Header>\r\n                                    <Accordion.Body>\r\n                                        We price based on two types of users: active and inactive.\r\n                                        An active user is someone who will login to the software and utilize it to host a tailgate meeting, lead a training, complete an inspection, et\r\n                                    </Accordion.Body>\r\n                                </Accordion.Item>\r\n                                <Accordion.Item eventKey=\"2\">\r\n                                    <Accordion.Header>Will you provide training documentation?\r\n\r\n                                    </Accordion.Header>\r\n                                    <Accordion.Body>\r\n                                        We price based on two types of users: active and inactive.\r\n                                        An active user is someone who will login to the software and utilize it to host a tailgate meeting, lead a training, complete an inspection, et\r\n                                    </Accordion.Body>\r\n                                </Accordion.Item>\r\n                                <Accordion.Item eventKey=\"4\">\r\n                                    <Accordion.Header>How long will it take to get our account setup?\r\n                                    </Accordion.Header>\r\n                                    <Accordion.Body>\r\n                                        We price based on two types of users: active and inactive.\r\n                                        An active user is someone who will login to the software and utilize it to host a tailgate meeting, lead a training, complete an inspection, et\r\n                                    </Accordion.Body>\r\n                                </Accordion.Item>\r\n                            </Accordion>\r\n                        </motion.div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default GetInTouch"],"names":["isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","Component","bsPrefix","className","children","props","useContext","AccordionContext","useBootstrapPrefix","_jsx","Collapse","in","classNames","AccordionBody","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","Accordion","useUncontrolled","activeKey","flush","controlledProps","prefix","Object","assign","Button","Item","Header","Body","Container","Row","Col","sm","md","motion","initial","opacity","skewY","translateY","whileInView","viewport","once","label","defaultActiveKey"],"sourceRoot":""}